{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","toUTCString","slice","timerId","this","window","setInterval","setState","clearInterval","className","props","name","React","Component","getRandomName","value","now","toString","App","showClock","clockName","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAyB,CACvBC,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAFhD,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAER,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,OAC3D,OAVP,kCAaE,WACEG,OAAOG,cAAcJ,KAAKD,WAd9B,oBAiBE,WACE,OACE,sBAAKM,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,KAAKM,MAAMC,OAGb,YAED,sBAAMF,UAAU,cAAhB,SACGL,KAAKN,MAAMC,eA3BtB,GAA2Ba,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQf,KAAKgB,MAAMC,WAAWf,OAAO,GAE3C,MAAM,SAAN,OAAgBa,GAQX,IAAMG,EAAb,4MACEpB,MAAyB,CACvBqB,WAAW,EACXC,UAAW,WAHf,EAMEjB,QAAUE,OAAOC,aAAY,WAC3B,EAAKC,SAAS,CAAEa,UAAWN,QAC1B,MARL,uDAUE,WAAqB,IAAD,OAClBO,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKjB,SAAS,CAAEY,WAAW,OAG7BE,SAASC,iBAAiB,SAAS,WACjC,EAAKf,SAAS,CAAEY,WAAW,SAlBjC,kCA4BE,WACEd,OAAOG,cAAcJ,KAAKD,WA7B9B,oBAgCE,WACE,OACE,sBAAKM,UAAU,MAAf,UACE,6CACCL,KAAKN,MAAMqB,WAAa,cAAC,EAAD,CAAOR,KAAMP,KAAKN,MAAMsB,mBApCzD,GAAyBR,IAAMC,WCZ/BY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.3f4ea258.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  today: string,\n};\n\ntype Props = {\n  name: string\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date().toUTCString().slice(-12, -4) });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  showClock: boolean\n  clockName: string\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    showClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = window.setInterval(() => {\n    this.setState({ clockName: getRandomName() });\n  }, 3300);\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n\n      this.setState({ showClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ showClock: true });\n    });\n  }\n\n  /* componentDidUpdate(prevProps:State) {\n    console.log(\n      `Renamed from ${prevProps.clockName} to ${this.state.clockName}`,\n    );\n  } */\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.showClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}